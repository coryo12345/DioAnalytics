---
import { Client } from 'discord.js';
import 'vue3-easy-data-table/dist/style.css';
import ServerData from '../components/server/ServerData.vue';
import UserList from '../components/server/UserList.vue';
import { getServerInfoFromCache } from '../discord/serverCache';
import Layout from '../layouts/Layout.astro';
import type { OverallData, UserTimeSummary } from '../models/server';

const client = new Client({ intents: [] });
client.login(import.meta.env.DISCORD_BOT_TOKEN);

const urlSearchParams = new URLSearchParams(Astro.url.search);
const params = Object.fromEntries(urlSearchParams.entries());

if (!params.id || !params.id.length) {
  return Astro.redirect('/');
}

const serverId = params.id;
const lookback = 7;

async function getServerInfo() {
  return await getServerInfoFromCache(serverId);
}

async function getOverallData() {
  // fetch data from API - default to 7 day lookback
  let summaryData: OverallData[];
  try {
    const resp = await fetch(`${import.meta.env.DATASTORE_URL}/server?guild=${serverId}&days=${lookback}`);
    summaryData = await resp.json();
  } catch (err) {
    summaryData = [];
  }
  return summaryData;
}

async function getUserData() {
  let userData: UserTimeSummary[];
  try {
    const resp = await fetch(`${import.meta.env.DATASTORE_URL}/users?guild=${serverId}&days=${lookback}`);
    userData = await resp.json();
  } catch (err) {
    userData = [];
  }
  return userData;
}

const [summaryData, userData, serverInfo] = await Promise.all([getOverallData(), getUserData(), getServerInfo()]);
---

<Layout title="View Server">
  <div class="flex flex-row items-center justify-center mb-8">
    <img src={serverInfo.icon} alt="" class="rounded-full w-20 h-20 mr-2" />
    <h1 class="text-4xl">{serverInfo.name}</h1>
  </div>
  <h1 class="text-2xl">Total Server Time</h1>
  <ServerData data={summaryData} client:load />
  <h1 class="mt-8 text-2xl mb-2">Time by User</h1>
  <UserList client:visible userData={userData} />
</Layout>
