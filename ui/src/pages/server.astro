---
import 'vue3-easy-data-table/dist/style.css';
import ServerData from '../components/server/ServerData.vue';
import UserList from '../components/server/UserList.vue';
import { DEFAULT_LOOKBACK } from '../constants';
import { getServerInfoFromCache } from '../discord/serverCache';
import Layout from '../layouts/Layout.astro';
import { getUserData } from '../server/serverUserData';
import { getOverallData } from '../server/totalServerData';

const urlSearchParams = new URLSearchParams(Astro.url.search);
const params = Object.fromEntries(urlSearchParams.entries());

if (!params.id || !params.id.length) {
  return Astro.redirect('/');
}

const serverId = params.id;
const lookback = DEFAULT_LOOKBACK.hours;

async function getServerInfo() {
  return await getServerInfoFromCache(serverId);
}

const [summaryData, userData, serverInfo] = await Promise.all([
  getOverallData(serverId, lookback),
  getUserData(serverId, lookback),
  getServerInfo(),
]);
---

<Layout title="View Server">
  {
    !!serverInfo && (
      <div class="flex flex-row items-center justify-center mb-8">
        <img src={serverInfo.icon} alt="" class="rounded-full w-20 h-20 mr-2" />
        <h1 class="text-4xl">{serverInfo.name}</h1>
      </div>
      <p class="my-1">Data is calculated per-hour. (e.g. Data from 6:00-6:59 will show under 6:00)</p>
      <h1 class="text-2xl my-2">Server Time</h1>
      <ServerData data={summaryData} serverId={serverId} client:load />
      <h1 class="mt-8 text-2xl mb-2">Time by User</h1>
      <UserList client:visible userData={userData} serverId={serverId} />
    )
  }
  {
    !serverInfo && <h2>Server Not Found</h2>
  }
</Layout>
